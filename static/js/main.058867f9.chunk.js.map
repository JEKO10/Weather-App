{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","unit","setUnit","fetchData","a","fetch","response","json","data","console","log","today","Date","day","getDate","month","getMonth","year","getFullYear","main","temp","document","body","classList","remove","add","className","cod","type","placeholder","onChange","e","target","value","autoFocus","onKeyDown","key","onClick","id","name","message","sys","country","description","wind","speed","toString","slice","temp_min","temp_max","sunrise","toUTCString","sunset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.058867f9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { BiSun, BiWind } from \"react-icons/bi\";\r\nimport { FiSunrise, FiSunset } from \"react-icons/fi\";\r\nimport { WiCloudy } from \"react-icons/wi\";\r\nimport { RiDrizzleLine, RiFoggyLine, RiSnowyLine } from \"react-icons/ri\";\r\nimport { IoRainyOutline, IoThunderstormOutline } from \"react-icons/io5\";\r\n\r\nconst api = {\r\n  key: \"30eb85b09f9584e4d9c77aee8b3aaf05\",\r\n  base: \"https://api.openweathermap.org/data/2.5/\",\r\n};\r\n\r\nfunction App() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weather, setWeather] = useState([]);\r\n  const [unit, setUnit] = useState(\"\");\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `${api.base}weather?q=${query}&appid=${api.key}`\r\n      );\r\n      const data = await response.json();\r\n      setWeather(data);\r\n      console.log(data);\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const today = new Date();\r\n  const day = today.getDate();\r\n  const month = today.getMonth() + 1;\r\n  const year = today.getFullYear();\r\n\r\n  return (\r\n    <>\r\n      {typeof weather.main != \"undefined\" && weather.main.temp > 293\r\n        ? document.body.classList.remove(\"cold\") ||\r\n          document.body.classList.add(\"hot\")\r\n        : typeof weather.main != \"undefined\" && weather.main.temp < 283\r\n        ? document.body.classList.remove(\"hot\") ||\r\n          document.body.classList.add(\"cold\")\r\n        : typeof weather.main != \"undefined\" && weather.main.temp < 293\r\n        ? (document.body.className = \"\")\r\n        : \"\"}\r\n      {weather.cod === \"404\" || weather.cod === \"400\"\r\n        ? (document.body.className = \"\")\r\n        : \"\"}\r\n      <section className=\"search\">\r\n        <div className=\"first\">\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n              onChange={(e) => {\r\n                setQuery(e.target.value);\r\n              }}\r\n              value={query}\r\n              autoFocus\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  fetchData();\r\n                  setQuery(\"\");\r\n                }\r\n              }}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              onClick={() => {\r\n                fetchData();\r\n                setQuery(\"\");\r\n              }}\r\n            >\r\n              SUBMIT\r\n            </button>\r\n          </div>\r\n          <p id=\"date\">{day + \"/\" + month + \"/\" + year}</p>\r\n        </div>\r\n        <select\r\n          name=\"units\"\r\n          className=\"units\"\r\n          onChange={(e) => {\r\n            if (e.target.value === \"celsius\" || \"kelvin\" || \"fahrenheit\") {\r\n              setUnit(e.target.value);\r\n            }\r\n          }}\r\n        >\r\n          <option value=\"kelvin\">Kelvin</option>\r\n          <option value=\"celsius\">Celsius</option>\r\n          <option value=\"fahrenheit\">Fahrenheit</option>\r\n        </select>\r\n        <p id=\"smallDate\">{day + \"/\" + month + \"/\" + year}</p>\r\n      </section>\r\n      {weather.cod === \"404\" || weather.cod === \"400\" ? (\r\n        <p className=\"noCity\">{weather.message}</p>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {typeof weather.main != \"undefined\" ? (\r\n        <section className=\"weather\">\r\n          <p className=\"city\">\r\n            {weather.name}, {weather.sys.country}\r\n          </p>\r\n          <h1 id=\"icon\">\r\n            {weather.weather[0].main === \"Clear\" ? (\r\n              <BiSun id=\"sun\" />\r\n            ) : weather.weather[0].main === \"Thunderstorm\" ? (\r\n              <IoThunderstormOutline id=\"thunder\" />\r\n            ) : weather.weather[0].main === \"Drizzle\" ? (\r\n              <RiDrizzleLine id=\"thunder\" />\r\n            ) : weather.weather[0].main === \"Rain\" ? (\r\n              <IoRainyOutline id=\"thunder\" />\r\n            ) : weather.weather[0].main === \"Snow\" ? (\r\n              <RiSnowyLine id=\"thunder\" />\r\n            ) : weather.weather[0].main === \"Clouds\" ? (\r\n              <WiCloudy id=\"cloud\" />\r\n            ) : (\r\n              <RiFoggyLine id=\"fog\" />\r\n            )}\r\n          </h1>\r\n          <div className=\"main\">\r\n            <p>{weather.weather[0].description}</p>\r\n            <p>Mainly through day: {weather.weather[0].main}</p>\r\n          </div>\r\n          <p className=\"wind\">\r\n            Wind speed: {weather.wind.speed}\r\n            <BiWind id=\"wind\" />\r\n          </p>\r\n          <div className=\"temp\">\r\n            <p id=\"temp\">\r\n              {unit === \"celsius\"\r\n                ? \"Temperature: \" +\r\n                  (weather.main.temp - 273.15).toString().slice(0, 4) +\r\n                  \"째C\"\r\n                : unit === \"fahrenheit\"\r\n                ? \"Temperature: \" +\r\n                  (weather.main.temp * (9 / 5) - 459.67)\r\n                    .toString()\r\n                    .slice(0, 5) +\r\n                  \"째F\"\r\n                : \"Temperature: \" + weather.main.temp + \"K\"}\r\n            </p>\r\n            <div>\r\n              <p id=\"min\">\r\n                {unit === \"celsius\"\r\n                  ? \"Min: \" +\r\n                    (weather.main.temp_min - 273.15).toString().slice(0, 4) +\r\n                    \"째C\"\r\n                  : unit === \"fahrenheit\"\r\n                  ? \"Min: \" +\r\n                    (weather.main.temp_min * (9 / 5) - 459.67)\r\n                      .toString()\r\n                      .slice(0, 5) +\r\n                    \"째F\"\r\n                  : \"Min: \" + weather.main.temp_min + \"K\"}\r\n              </p>\r\n              <p id=\"max\">\r\n                {unit === \"celsius\"\r\n                  ? \"Max: \" +\r\n                    (weather.main.temp_max - 273.15).toString().slice(0, 4) +\r\n                    \"째C\"\r\n                  : unit === \"fahrenheit\"\r\n                  ? \"Max: \" +\r\n                    (weather.main.temp_max * (9 / 5) - 459.67)\r\n                      .toString()\r\n                      .slice(0, 5) +\r\n                    \"째F\"\r\n                  : \"Max: \" + weather.main.temp_max + \"K\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"zenit\">\r\n            <div>\r\n              <h5>Sunrise</h5>\r\n              <p className=\"para\">\r\n                <FiSunrise id=\"sun\" />\r\n                {new Date(weather.sys.sunrise * 1000)\r\n                  .toUTCString()\r\n                  .slice(16, 22)}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <h5>Sunset</h5>\r\n              <p className=\"para\">\r\n                <FiSunset id=\"sun\" />\r\n                {new Date(weather.sys.sunset * 1000)\r\n                  .toUTCString()\r\n                  .slice(16, 22)}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}